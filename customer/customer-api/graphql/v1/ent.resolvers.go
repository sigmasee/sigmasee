package graphqlv1

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/sigmasee/sigmasee/customer/customer-api/graphql/v1/generated"
	"github.com/sigmasee/sigmasee/customer/customer-api/graphql/v1/models"
	"github.com/sigmasee/sigmasee/customer/shared/entities"
)

// Status is the resolver for the status field.
func (r *customerOutboxWhereInputResolver) Status(ctx context.Context, obj *entities.CustomerOutboxWhereInput, data *models.CustomerOutboxStatus) error {
	panic(fmt.Errorf("not implemented: Status - status"))
}

// StatusNeq is the resolver for the statusNEQ field.
func (r *customerOutboxWhereInputResolver) StatusNeq(ctx context.Context, obj *entities.CustomerOutboxWhereInput, data *models.CustomerOutboxStatus) error {
	panic(fmt.Errorf("not implemented: StatusNeq - statusNEQ"))
}

// StatusIn is the resolver for the statusIn field.
func (r *customerOutboxWhereInputResolver) StatusIn(ctx context.Context, obj *entities.CustomerOutboxWhereInput, data []models.CustomerOutboxStatus) error {
	panic(fmt.Errorf("not implemented: StatusIn - statusIn"))
}

// StatusNotIn is the resolver for the statusNotIn field.
func (r *customerOutboxWhereInputResolver) StatusNotIn(ctx context.Context, obj *entities.CustomerOutboxWhereInput, data []models.CustomerOutboxStatus) error {
	panic(fmt.Errorf("not implemented: StatusNotIn - statusNotIn"))
}

// CustomerOutboxWhereInput returns generated.CustomerOutboxWhereInputResolver implementation.
func (r *Resolver) CustomerOutboxWhereInput() generated.CustomerOutboxWhereInputResolver {
	return &customerOutboxWhereInputResolver{r}
}

type customerOutboxWhereInputResolver struct{ *Resolver }
