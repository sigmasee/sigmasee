// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modified_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "designation", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "given_name", Type: field.TypeString, Nullable: true},
		{Name: "middle_name", Type: field.TypeString, Nullable: true},
		{Name: "family_name", Type: field.TypeString, Nullable: true},
		{Name: "photo_url", Type: field.TypeString, Nullable: true},
		{Name: "photo_url_24", Type: field.TypeString, Nullable: true},
		{Name: "photo_url_32", Type: field.TypeString, Nullable: true},
		{Name: "photo_url_48", Type: field.TypeString, Nullable: true},
		{Name: "photo_url_72", Type: field.TypeString, Nullable: true},
		{Name: "photo_url_192", Type: field.TypeString, Nullable: true},
		{Name: "photo_url_512", Type: field.TypeString, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
		{Name: "locale", Type: field.TypeString, Nullable: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "customer_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[3]},
			},
			{
				Name:    "customer_designation",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[4]},
			},
			{
				Name:    "customer_title",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[5]},
			},
			{
				Name:    "customer_name",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[6]},
			},
			{
				Name:    "customer_given_name",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[7]},
			},
			{
				Name:    "customer_middle_name",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[8]},
			},
			{
				Name:    "customer_family_name",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[9]},
			},
		},
	}
	// CustomerOutboxesColumns holds the columns for the "customer_outboxes" table.
	CustomerOutboxesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "topic", Type: field.TypeString},
		{Name: "key", Type: field.TypeBytes},
		{Name: "payload", Type: field.TypeBytes},
		{Name: "headers", Type: field.TypeJSON},
		{Name: "retry_count", Type: field.TypeInt},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PENDING", "FAILED"}},
		{Name: "last_retry", Type: field.TypeTime, Nullable: true},
		{Name: "processing_errors", Type: field.TypeJSON, Nullable: true},
	}
	// CustomerOutboxesTable holds the schema information for the "customer_outboxes" table.
	CustomerOutboxesTable = &schema.Table{
		Name:       "customer_outboxes",
		Columns:    CustomerOutboxesColumns,
		PrimaryKey: []*schema.Column{CustomerOutboxesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "customeroutbox_last_retry_status",
				Unique:  false,
				Columns: []*schema.Column{CustomerOutboxesColumns[8], CustomerOutboxesColumns[7]},
			},
		},
	}
	// CustomerSettingsColumns holds the columns for the "customer_settings" table.
	CustomerSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modified_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "customer_customer_settings", Type: field.TypeString, Unique: true},
	}
	// CustomerSettingsTable holds the schema information for the "customer_settings" table.
	CustomerSettingsTable = &schema.Table{
		Name:       "customer_settings",
		Columns:    CustomerSettingsColumns,
		PrimaryKey: []*schema.Column{CustomerSettingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "customer_settings_customers_customer_settings",
				Columns:    []*schema.Column{CustomerSettingsColumns[4]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "customersetting_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CustomerSettingsColumns[3]},
			},
			{
				Name:    "customersetting_customer_customer_settings",
				Unique:  true,
				Columns: []*schema.Column{CustomerSettingsColumns[4]},
			},
		},
	}
	// IdentitiesColumns holds the columns for the "identities" table.
	IdentitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modified_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "email_verified", Type: field.TypeBool, Nullable: true},
		{Name: "customer_identities", Type: field.TypeString},
	}
	// IdentitiesTable holds the schema information for the "identities" table.
	IdentitiesTable = &schema.Table{
		Name:       "identities",
		Columns:    IdentitiesColumns,
		PrimaryKey: []*schema.Column{IdentitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "identities_customers_identities",
				Columns:    []*schema.Column{IdentitiesColumns[6]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "identity_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{IdentitiesColumns[3]},
			},
			{
				Name:    "identity_email",
				Unique:  false,
				Columns: []*schema.Column{IdentitiesColumns[4]},
			},
			{
				Name:    "identity_email_verified",
				Unique:  false,
				Columns: []*schema.Column{IdentitiesColumns[5]},
			},
			{
				Name:    "identity_customer_identities",
				Unique:  false,
				Columns: []*schema.Column{IdentitiesColumns[6]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		CustomerOutboxesTable,
		CustomerSettingsTable,
		IdentitiesTable,
	}
)

func init() {
	CustomerSettingsTable.ForeignKeys[0].RefTable = CustomersTable
	IdentitiesTable.ForeignKeys[0].RefTable = CustomersTable
}
