// Code generated by ent, DO NOT EDIT.

package entities

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

func (c *Customer) Identities(ctx context.Context) (result []*Identity, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = c.NamedIdentities(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = c.Edges.IdentitiesOrErr()
	}
	if IsNotLoaded(err) {
		result, err = c.QueryIdentities().All(ctx)
	}
	return result, err
}

func (c *Customer) CustomerSettings(ctx context.Context) (*CustomerSetting, error) {
	result, err := c.Edges.CustomerSettingsOrErr()
	if IsNotLoaded(err) {
		result, err = c.QueryCustomerSettings().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (cs *CustomerSetting) Customer(ctx context.Context) (*Customer, error) {
	result, err := cs.Edges.CustomerOrErr()
	if IsNotLoaded(err) {
		result, err = cs.QueryCustomer().Only(ctx)
	}
	return result, err
}

func (i *Identity) Customer(ctx context.Context) (*Customer, error) {
	result, err := i.Edges.CustomerOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryCustomer().Only(ctx)
	}
	return result, err
}
